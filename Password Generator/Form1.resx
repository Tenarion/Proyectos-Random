<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>